@page "/fetchdata"

<PageTitle>Weather forecast</PageTitle>

@using weather_station.Models
@using weather_station.Services

@inject AmbientWeatherService weatherService

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (forecast == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>The weather for @forecast.DeviceInfo.Coords.Address on @forecast.WeatherData.Date is:</h3>

    <table class="table">
        <thead>
            <tr>
                <th>Outdoor Temp. (F)</th>
                <th>Indoor Temp. (F)</th>
                <th>Dew Point</th>
                <th>Humidity</th>
            </tr>
        </thead>
        <tbody>
                <tr>
                    <td>@forecast.WeatherData.OutdoorTempature</td>
                    <td>@forecast.WeatherData.IndoorTemperature</td>
                    <td>@forecast.WeatherData.DewPoint</td>
                    <td>@forecast.WeatherData.Humidity</td>
                </tr>
        </tbody>
    </table>
}

@code {
    ListDevicesEndpointResponse? forecast;

    protected override async Task OnInitializedAsync()
    {

        ApiConfig config = new ApiConfig
            {
                ApiKey = System.Configuration.ConfigurationManager.AppSettings["ApiKey"],
                ApplicationKey = System.Configuration.ConfigurationManager.AppSettings["ApplicationKey"],
                MacAddress = System.Configuration.ConfigurationManager.AppSettings["MacAddress"]
            };

        forecast = await weatherService.ListDevices(config);
    }
}
